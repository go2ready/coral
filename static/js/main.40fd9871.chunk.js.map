{"version":3,"sources":["actions/CanvasAction.tsx","reducers/Index.tsx","reducers/CanvasReducer.tsx","StoreManager.tsx","components/WebSettingProvider.ts","components/CanvasManager.tsx","components/containers/CanvasManagerContainer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["setShouldSubmit","createAction","resolve","shouldSubmit","rootReducer","combineReducers","canvas","state","action","undefined","type","getType","canvasAction","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","initialState","enhancer","applyMiddleware","apply","createStore","configureStore","WebSettingProvider","classCallCheck","this","csrfToken","CoralRect","x0","x1","y0","y1","CanvasManager","withStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","_React$Component","_temp","props","_this","possibleConstructorReturn","getPrototypeOf","call","flickrKey","flickrSecret","imgObj","onSubmit","bind","assertThisInitialized","currCount","inherits","createClass","key","value","CreateHTMLCanvasByName","fabric","prototype","set","transparentCorners","borderColor","cornerColor","perPixelTargetFind","borderScaleFactor","cornerSize","rotatingPointOffset","originX","originY","Canvas","backgroundColor","selectionLineWidth","enableRetinaScaling","onInvalid","PreparingImageObj","FetchFlickrPhoto","isDown","origX","origY","rectangle","Rect","left","top","fill","stroke","strokeWidth","self","on","o","pointer","getPointer","e","x","y","remove","getObjects","concat","add","Math","abs","width","height","renderAll","_this2","GetCurrentRectPosition","request","timeout","response","send","url","src","then","res","status","console","log","err","error","_this3","rect","classes","react","AppBar","position","Toolbar","Typography","variant","className","Button","color","onClick","name","canvasRoot","document","getElementById","htmlCanvas","createElement","id","imageEle","hidden","appendChild","query","body","PopulateCanvasWithUrl","setState","count","_this4","crossOrigin","onload","imgInstance","Image","setWidth","setHeight","setBackgroundImage","requestRenderAll","_objects","cwidth","getWidth","cheight","getHeight","cr","farmId","serverId","secret","React","CanvasManagerContainer","connect","dispatch","App","mixins","gutters","textAlign","centerRoot","maxWidth","shareIcon","display","_Component","arguments","react_default","a","Fragment","CssBaseline","Paper","elevation","touch-action","Component","Boolean","location","hostname","match","ReactDOM","render","es","App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40fd9871.chunk.js","sourcesContent":["import { createAction } from 'typesafe-actions'\nimport { ICanvasState } from '../types/CanvasState';\n\nexport const setShouldSubmit = createAction('canvas/SET_SHOULD_SUBMIT', resolve => {\n  return (shouldSubmit : boolean) => resolve({ shouldSubmit } as ICanvasState);\n});","import { combineReducers } from 'redux';\n\nimport { canvasActionReducer } from './CanvasReducer';\n\nexport const rootReducer = combineReducers({\n  canvas: canvasActionReducer,\n});","import { ActionType, getType } from 'typesafe-actions'\nimport { ICanvasState } from '../types/CanvasState'\n\nimport * as canvasAction from '../actions/CanvasAction'\nexport type CanvasAction = ActionType<typeof canvasAction>\n\nexport function canvasActionReducer(state: ICanvasState | undefined, action: CanvasAction){\n  if (state === undefined)\n  {\n    state = {\n      shouldSubmit: false,\n    }\n  }\n\n  switch (action.type) {\n    case getType(canvasAction.setShouldSubmit):\n      return { ...state,\n        shouldSubmit: action.payload.shouldSubmit,\n      };\n    default:\n      return state;\n  }\n}","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport { rootReducer } from './reducers/Index';\n\ndeclare global {\n  interface Window {\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any;\n  }\n}\n\nconst composeEnhancers =\n  (\n    // process.env.NODE_ENV === 'development' &&\n    window &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nfunction configureStore(initialState?: object) {\n    // configure middlewares\n    const middlewares : any[] = [];\n    // compose enhancers\n    const enhancer = composeEnhancers(applyMiddleware(...middlewares));\n    // create store\n    return createStore(rootReducer, initialState!, enhancer);\n}\n\n// pass an optional param to rehydrate state on app start\n// and export store singleton instance\nexport const store = configureStore();","export class WebSettingProvider {\n  public static csrfToken: string = (window as any)[\"generated_csrf_token\"];\n}","import * as React from 'react';\r\nimport * as request from \"superagent\";\r\n\r\nimport { fabric } from \"fabric\";\r\n\r\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\r\nimport { withStyles, WithStyles, createStyles  } from '@material-ui/core/styles';\r\nimport { WebSettingProvider } from './WebSettingProvider';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  });\r\n\r\nclass CoralRect {\r\n  public x0: number;\r\n  public x1: number;\r\n  public y0: number;\r\n  public y1: number;\r\n}\r\n\r\nexport interface ICanvasManagerProps extends WithStyles<typeof styles> {\r\n  setShouldSubmit?: (shouldSubmit: boolean) => void;\r\n}\r\n\r\nexport interface ICanvasmanagerState {\r\n  currCount: number;\r\n}\r\n\r\nexport const CanvasManager = withStyles(styles)(\r\n    class extends React.Component<ICanvasManagerProps, ICanvasmanagerState>{\r\n      private flickrKey: string = \"e813628d1745d2099f9ca002681b381b\";\r\n      private flickrSecret: string = \"8e318755701e66f1\";\r\n\r\n      private imgObj: HTMLImageElement;\r\n      private canvas: fabric.Canvas;\r\n\r\n      constructor(props : ICanvasManagerProps) {\r\n        super(props);\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.state = {\r\n          currCount: 0\r\n        };\r\n      }\r\n\r\n      public componentDidMount()\r\n      {\r\n        // Setting up canvas and fetching requests\r\n        var canvas = this.CreateHTMLCanvasByName(\"coralfinder\");\r\n\r\n        fabric.Object.prototype.set({\r\n            transparentCorners: false,\r\n            borderColor: \"#FFBAE5\",\r\n            cornerColor: \"#FFBAE5\",\r\n            perPixelTargetFind: true,\r\n            borderScaleFactor: 1,\r\n            cornerSize: 2,\r\n            rotatingPointOffset: 6,\r\n            originX: 'center',\r\n            originY: 'center',\r\n            // objectCaching: false\r\n        });\r\n\r\n        this.canvas = new fabric.Canvas(canvas, {\r\n            backgroundColor: \"#FFFFFF\",\r\n            // selectionColor : 'rgba(0,0,0,1)',\r\n            selectionLineWidth : 5,\r\n            enableRetinaScaling: false\r\n        });\r\n        \r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onInvalid = this.onInvalid.bind(this);\r\n\r\n        this.PreparingImageObj();\r\n        this.FetchFlickrPhoto();\r\n\r\n        var isDown = false;\r\n          var origX = 0;\r\n          var origY = 0;\r\n          var rectangle = new fabric.Rect({\r\n            left: origX,\r\n            top: origY,\r\n            fill: '',\r\n            stroke: 'red',\r\n            strokeWidth: 3,\r\n        });\r\n\r\n        var self = this;\r\n\r\n        this.canvas.on('mouse:down', function(o){\r\n          var pointer = self.canvas.getPointer(o.e);\r\n      \r\n          isDown = true;\r\n          origX = pointer.x;\r\n          origY = pointer.y;\r\n      \r\n          rectangle = new fabric.Rect({\r\n            left: origX,\r\n            top: origY,\r\n            originX: 'left',\r\n            originY: 'top',\r\n            fill: '',\r\n            stroke: 'red',\r\n            strokeWidth: 3,\r\n          });\r\n\r\n          self.canvas.remove.apply(self.canvas, self.canvas.getObjects().concat())\r\n          self.canvas.add(rectangle);\r\n        });\r\n\r\n        this.canvas.on('mouse:move', function(o){\r\n          if (!isDown) return;\r\n          var pointer = self.canvas.getPointer(o.e);\r\n          if(origX>pointer.x){\r\n              rectangle.set({ left: Math.abs(pointer.x) });\r\n          }\r\n          if(origY>pointer.y){\r\n              rectangle.set({ top: Math.abs(pointer.y) });\r\n          }\r\n      \r\n          rectangle.set({ width: Math.abs(origX - pointer.x) });\r\n          rectangle.set({ height: Math.abs(origY - pointer.y) });\r\n          self.canvas.renderAll();\r\n        });\r\n\r\n        this.canvas.on('mouse:up', function(o){\r\n          isDown = false;\r\n        });\r\n      }\r\n\r\n      public onInvalid()\r\n      {\r\n        var self = this;\r\n        if (typeof this.props.setShouldSubmit === 'function')\r\n        {\r\n          var rect = this.GetCurrentRectPosition();\r\n          if (!rect)\r\n          {\r\n            return;\r\n          }\r\n          request.post('/coral/')\r\n          .set('X-CSRFToken', WebSettingProvider.csrfToken)\r\n          .timeout({\r\n            response: 60000,  // Wait 60 seconds for the server to start sending,\r\n          })\r\n          .send({\r\n            'url': self.imgObj.src,\r\n            'x0': 0,\r\n            'x1': 0,\r\n            'y0': 0,\r\n            'y1': 0,\r\n          })\r\n          .then(res => {\r\n            if (res.status >= 200 && res.status < 300)\r\n            {\r\n              console.log('Photo info registered');\r\n              this.FetchFlickrPhoto();\r\n            }\r\n          }, err => {\r\n            console.log(err);\r\n          });\r\n          this.props.setShouldSubmit(true);\r\n        } else {\r\n          console.error('setShouldSubmit function not available');\r\n        }  \r\n      }\r\n\r\n      public onSubmit()\r\n      {\r\n        var self = this;\r\n        if (typeof this.props.setShouldSubmit === 'function')\r\n        {\r\n          var rect = this.GetCurrentRectPosition();\r\n          if (!rect)\r\n          {\r\n            return;\r\n          }\r\n          request.post('/coral/')\r\n          .set('X-CSRFToken', WebSettingProvider.csrfToken)\r\n          .timeout({\r\n            response: 60000,  // Wait 60 seconds for the server to start sending,\r\n          })\r\n          .send({\r\n            'url': self.imgObj.src,\r\n            'x0': rect.x0,\r\n            'x1': rect.x1,\r\n            'y0': rect.y0,\r\n            'y1': rect.y1,\r\n          })\r\n          .then(res => {\r\n            console.log(res);\r\n            if (res.status >= 200 && res.status < 300)\r\n            {\r\n              console.log('Photo info registered');\r\n              this.FetchFlickrPhoto();\r\n            }\r\n          }, err => {\r\n            console.log(err);\r\n          });\r\n          this.props.setShouldSubmit(true);\r\n        } else {\r\n          console.error('setShouldSubmit function not available');\r\n        }    \r\n      }\r\n\r\n      public render() : JSX.Element {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n          <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                CoralFinder Sample counts: {this.state.currCount}\r\n              </Typography>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                onClick={this.onSubmit}>\r\n                Submit\r\n              </Button>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"secondary\"\r\n                onClick={this.onInvalid}>\r\n                No Coral\r\n              </Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n        );\r\n      }\r\n\r\n      protected CreateHTMLCanvasByName(name: string) {\r\n        const canvasRoot = document.getElementById(\"canvasWrapper\");\r\n        const htmlCanvas = document.createElement(\"canvas\");\r\n        htmlCanvas.id = name;\r\n    \r\n        const imageEle = document.createElement(\"img\");\r\n        imageEle.id = 'coralimg';\r\n        imageEle.hidden = true;\r\n\r\n        if (canvasRoot !== null)\r\n        {\r\n          canvasRoot.appendChild(imageEle);\r\n          canvasRoot.appendChild(htmlCanvas);\r\n        } else {\r\n          console.error(\"canvas root is null!\");\r\n        }\r\n\r\n        return htmlCanvas;\r\n      }\r\n\r\n      private FetchFlickrPhoto(){\r\n        var self = this;\r\n\r\n        request.get('/coral/')\r\n        .set('X-CSRFToken', WebSettingProvider.csrfToken)\r\n        .timeout({\r\n          response: 60000,  // Wait 60 seconds for the server to start sending,\r\n        })\r\n        .query({})\r\n        .then(res => {\r\n          if (res.body != null && res.status >= 200 && res.status < 300)\r\n          {\r\n            const url = res.body.url;\r\n            \r\n            self.PopulateCanvasWithUrl(url);\r\n            self.setState({currCount: res.body.count});\r\n          }\r\n        }, err => {\r\n          console.log(err);\r\n        });\r\n      }\r\n\r\n      private PreparingImageObj()\r\n      {\r\n        this.imgObj = document.getElementById(\"coralimg\") as HTMLImageElement;\r\n\r\n        this.imgObj.crossOrigin = \"Anonymous\";\r\n        if (this.imgObj)\r\n        {\r\n          this.imgObj.onload = () => {\r\n            var imgInstance = new fabric.Image(this.imgObj, {\r\n              left: 0,\r\n              top: 0,\r\n            });\r\n  \r\n            if (imgInstance.width && imgInstance.height)\r\n            {\r\n              this.canvas.setWidth(imgInstance.width);\r\n              this.canvas.setHeight(imgInstance.height);\r\n              this.canvas.setBackgroundImage(imgInstance, this.canvas.renderAll.bind(this.canvas), {\r\n                  // Needed to position backgroundImage at 0/0\r\n                originX: 'left',\r\n                originY: 'top'\r\n              });\r\n              this.canvas.requestRenderAll();\r\n            };\r\n          }\r\n        }\r\n      }\r\n\r\n      private PopulateCanvasWithUrl(url: string)\r\n      {\r\n        if (!this.imgObj)\r\n        {\r\n          this.PreparingImageObj();\r\n        }\r\n\r\n        this.imgObj.src = url;\r\n      }\r\n\r\n      private GetCurrentRectPosition() : CoralRect | null {\r\n        var rect = this.canvas._objects[0];\r\n        var cwidth = this.canvas.getWidth();\r\n        var cheight = this.canvas.getHeight();\r\n        if (rect && rect.left && rect.top && rect.width && rect.height)\r\n        {\r\n          var cr = new CoralRect();\r\n          cr.x0 = rect.left / cwidth;\r\n          cr.x1 = (rect.left + rect.width) / cwidth;\r\n          cr.y0 = rect.top / cheight;\r\n          cr.y1 = (rect.top - rect.height) / cheight;\r\n          return cr;\r\n        }\r\n        \r\n        return null;\r\n      }\r\n\r\n      private ConstructPhotoUrl(farmId: string, serverId: string, id: string, secret: string) : string {\r\n        return `https://farm${farmId}.staticflickr.com/${serverId}/${id}_${secret}.jpg`;\r\n      }\r\n    }\r\n)","import { CanvasManager } from '../CanvasManager';\r\nimport { RootState } from '../../types/Index';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { CanvasAction } from '../../reducers/CanvasReducer';\r\nimport { setShouldSubmit } from '../../actions/CanvasAction';\r\n\r\nexport function mapStateToProps(state: RootState) {\r\n  const { canvas: { shouldSubmit }} = state;\r\n    return {\r\n      shouldSubmit,\r\n    }\r\n  }\r\n\r\nexport function mapDispatchToProps(dispatch: Dispatch<CanvasAction>) {\r\n  return {\r\n    setShouldSubmit: (shouldSubmit: boolean) => dispatch(setShouldSubmit(shouldSubmit)),\r\n  }\r\n}\r\n\r\nexport const CanvasManagerContainer = connect(mapStateToProps, mapDispatchToProps)(CanvasManager);","import React, { Component } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\n\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { withStyles, WithStyles, createStyles  } from '@material-ui/core/styles';\n\nimport { CanvasManagerContainer } from './components/containers/CanvasManagerContainer';\n\nimport './App.css';\n\nconst styles = (theme: Theme) => createStyles({\n  root: {\n    ...theme.mixins.gutters(),\n    textAlign: 'center',\n  },\n  centerRoot: {\n    ...theme.mixins.gutters(),\n    textAlign: 'center',\n    maxWidth: '500px',\n  },\n  shareIcon: {\n    textAlign: 'center',\n    display: 'inline',\n  },\n});\n\nexport interface IAppProps extends WithStyles<typeof styles> {\n}\n\nexport const App = withStyles(styles)(\n  class App extends Component<IAppProps> {\n    // constructor(props : IAppProps) {\n    //   super(props);\n    // }\n\n    render() {\n      const { classes } = this.props;\n      return (\n        <React.Fragment>\n          <CssBaseline />\n          {\n            <div>\n              <Paper className={classes.root} elevation={1}>\n                <div>\n                  <CanvasManagerContainer />\n                  <div id=\"canvasWrapper\" touch-action=\"none\">\n                  </div>\n                </div>\n              </Paper> \n            </div>\n          }\n        </React.Fragment>\n      );\n    }\n\n  }\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './StoreManager';\nimport './index.css';\n\nimport { App}  from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root') as HTMLElement\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}